//package sa.edu.qu.qupc.marks;

import java.io.FileWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.LinkedHashMap;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.JSONValue;

public class Main {

	public static final String TEST_KEY = "Test ";
	public static final String INPUT_KEY = "Inputs";
	public static final String EX_OUTPUT_KEY = "Expected output";
	public static final String ACT_OUTPUT_KEY = "Actual output";
	public static final String STATUS_KEY = "Status";
	public static final String PASSED_KEY = "PASSED";
	public static final String FAILED_KEY = "FAILED";
	public static final String JSONFILE_NAME_KEY = "Main.output.json";

	@SuppressWarnings("unchecked")
	public static void main(String[] args) {
		[% for(k in _class.eAnnotations.first.details) {%]
			[% var strs = k.key.split(':'); %]
			[%= strs[1]+ ' ' + strs[0] + '=' + (k.value.replace("<","{").replace(">","}")) + ';' %]
		[% } %]

		
		JSONObject mainJsonObj = new JSONObject();
		for (int i = 0; i < [%= _class.eAllOperations.first.eParameters.first.name%].length; i++) {

			JSONObject entryJsonObj = new JSONObject();

			[%=_class.name%] obj = new [%=_class.name%]();
			int res = obj.[%= _class.eAllOperations.first().name + '(' + _class.eAllOperations.first.eParameters.collect(e|e.name + '[i]').concat(',') + ');' %]
			

			StringBuilder str = new StringBuilder();			
			for (int j=0; j<[%= _class.eAllOperations.first.eParameters.first.name%].length;  j++) {
				str.append(String.format("%s",Arrays.toString([%= _class.eAllOperations.first.eParameters.first.name +'[i][j]'%])));
			}
			str.append(String.format(", many = %s",Arrays.toString([%= _class.eAllOperations.first.eParameters.second.name +'[i]'%])));

			entryJsonObj.put(INPUT_KEY, String.format("%s", str));
			entryJsonObj.put(EX_OUTPUT_KEY, String.format("%d", expected[i]));
			entryJsonObj.put(ACT_OUTPUT_KEY, String.format("%d", res));

			if (res == expected[i]) entryJsonObj.put(STATUS_KEY, PASSED_KEY);
			else entryJsonObj.put(STATUS_KEY, FAILED_KEY);

			mainJsonObj.put("Test " + (i + 1), entryJsonObj);
		}
		
		try {
			FileWriter file = new FileWriter(JSONFILE_NAME_KEY);
			String jsonString = JSONValue.toJSONString(mainJsonObj);
			file.write(jsonString);
			file.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}